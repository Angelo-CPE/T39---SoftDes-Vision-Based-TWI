# -*- coding: utf-8 -*-
"""CSWP

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iOnrt08Evk6Onjl_uj496cn9JhXstijw
"""

import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image, ImageOps

# Caching the model loading
@st.cache_resource
def load_model():
    model = tf.keras.models.load_model('model.h5')
    return model

model = load_model()

st.write("""
# T39 - Vision-Based Flaw Detection System for Train Wheels Inspection
""")

file = st.file_uploader("Choose a train wheels image from computer", type=["jpg", "png"])

def import_and_predict(image_data, model):
    size = (150, 150)
    # Resize image
    image = ImageOps.fit(image_data, size, Image.LANCZOS)

    # Ensure image has 3 channels
    if image.mode != 'RGB':
        image = image.convert('RGB')

    img = np.asarray(image)

    # Normalize the image
    img = img / 255.0

    # Reshape the image for the model
    img_reshape = img.reshape((1, 150, 150, 3))

    # Predict
    prediction = model.predict(img_reshape)

    return prediction

if file is None:
    st.text("Please upload an image file")
else:
    image = Image.open(file)
    st.image(image, use_column_width=True)
    prediction = import_and_predict(image, model)
    class_names = ['Flawed', 'Not Flawed']
    string = "OUTPUT : " + class_names[np.argmax(prediction)]
    st.success(string)
